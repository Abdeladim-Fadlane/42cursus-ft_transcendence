services:
  authdb:
    image: postgres
    container_name: authdb
    volumes:
      - ./auth/data/db:/var/lib/postgresql/data
    env_file:
      - .env
    restart: always

  gamedb:
    image: postgres
    container_name: gamedb
    volumes:
      - ./game/data/db:/var/lib/postgresql/data
    env_file:
      - .env
    depends_on:
      - authdb
    restart: always

  # chatdb:
  #   image: postgres
  #   container_name: chatdb
  #   volumes:
  #     - ./chat/data/db:/var/lib/postgresql/data
  #   env_file:
  #     - .env
  #   depends_on:
  #     - authdb
  #   restart: always

  auth:
    build: auth
    image: djangoo
    container_name: auth
    volumes:
      - ./auth/.:/code
    env_file:
      - .env
    depends_on:
      - authdb
    restart: always

  game:
    image: djangoo
    container_name: game
    volumes:
      - ./game/.:/code
    env_file:
      - .env
    depends_on:
      - gamedb
    restart: always

  # chat:
  #   image: djangoo
  #   container_name: chat
  #   volumes:
  #     - ./chat/.:/code
  #   env_file:
  #     - .env
  #   depends_on:
  #     - chatdb
  #   restart: always

  webserver:
    build: WebServer
    image: nginx
    container_name: nginx
    volumes:
      - ./WebServer/.:/server
    ports:
      - "443:443"
    depends_on:
      - game
      - auth
    restart: always

      
